[comment encoding = UTF-8 /]
[module Petri2Tina('http://petrinet')]

[template public Petri2Tina(aPetriNet : PetriNet)]
[comment @main/]
[file (aPetriNet.name + '.net', false, 'UTF-8')]
net [aPetriNet.name/]
[for (pl : Place | aPetriNet.petrinetelement->getPlaces())]
pl [pl.name/] ([pl.nb_jetons/])
[/for]
[for (tr : Transition | aPetriNet.petrinetelement->getTransistions())]
tr [tr.name/] [tr.getPredecessors()/] -> [tr.getSuccessors()/]
[/for][/file][/template]

[query public getPlaces(n: OrderedSet(PetriNetElement) ): OrderedSet(Place) =
	n->select( e | e.oclIsTypeOf(Place) )
		->collect( e | e.oclAsType(Place) )
		->asOrderedSet()
/]

[query public getTransistions(n: OrderedSet(PetriNetElement) ): OrderedSet(Transition) =
	n->select( e | e.oclIsTypeOf(Transition) )
		->collect( e | e.oclAsType(Transition) )
		->asOrderedSet()
/]

[template public getPredecessors(tr : Transition)]
[for (a: Arc | tr.LinktoPredecessor)][a.aux1()/][/for]
[/template]

[template public getSuccessors(tr : Transition)]
[for (a: Arc | tr.LinktoSuccessor)][a.aux2()/][/for]
[/template]

[template public aux1(a: Arc)]
[let n: Integer = a.nb_jetons][a.source.name/][if a.Type = ArcType::readarc]['?'+n/][else][if n <> 1]['*'+n/][/if][/if] [/let]
[/template]

[template public aux2(a: Arc)]
[let n: Integer = a.nb_jetons][a.cible.name/][if a.Type = ArcType::readarc]['?'+n/][else][if n <> 1]['*'+n/][/if][/if] [/let]
[/template]





